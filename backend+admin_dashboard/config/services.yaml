# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    email.robot: '%env(ROBOT_EMAIL)%'
    email.robot.name: 'ShoSho'
    env(MERCURE_PUBLISH_URL): ''
    env(MERCURE_JWT_SECRET): ''
    env(FRONTEND_HOST): 'http://localhost:3000'

    frontend.host: '%env(FRONTEND_HOST)%'
    frontend.confirm_url: '%frontend.host%/confirm/'
    frontend.reset_url: '%frontend.host%/reset/'
    frontend.invite_url: '%frontend.host%/invite/'

    stripe.secret_key: '%env(STRIPE_SECRET_KEY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Serializer\UserContextBuilder:
        decorates: 'api_platform.serializer.context_builder'
        arguments: ['@App\Serializer\UserContextBuilder.inner']

    App\Serializer\UserAttributeNormalizer:
        arguments: ['@security.token_storage']
        tags:
            - { name: 'serializer.normalizer', priority: 64 }

    App\EventListener\AuthenticationSuccessListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }

    App\EventListener\UserConfirmedListener:
        tags:
            - { name: kernel.event_listener, event: app.user.confirmed, method: onConfirmed }

    App\EventSubscriber\ReferralEntitySubscriber:
        tags:
            - { name: doctrine.event_subscriber, connection: default }
